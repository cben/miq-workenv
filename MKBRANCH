#!/usr/bin/env fish

# Assumes this script & files live in a parallel subdir,
# e.g. ~/miq/WORKENV/ alongside ~/miq/<branch> manageiq checkouts.
set workenv_dir (dirname (realpath (status --current-filename)))  # ~/miq/WORKENV
set dir (dirname $workenv_dir)                                    # ~/miq
set workenv_relative ../(basename $workenv_dir)                   # ../WORKENV

if [ (count $argv) -lt 1 ]
    set name (status --current-filename)
    echo "Usage: $name <branch_name> [<start-point>] [<git branch options...>]"
    echo "Should be run from an existing checkout directory."
    exit 2
end
set branch $argv[1]

git branch $argv  # support extra git branch params
or echo "^^ That's OK, can use an existing branch."

git worktree add $dir/$branch $branch

ln -s -v $workenv_relative/Gemfile.dev.rb $dir/$branch/
ln -s -v $workenv_relative/.agignore $dir/$branch/

sed -e "s/vmdb_development/vmdb_development_$branch/" \
    -e "s/vmdb_production/vmdb_production_$branch/" \
    -e "s/vmdb_test/vmdb_test_$branch<%= ENV['TEST_ENV_NUMBER'] %>/" \
    $dir/$branch/config/database.pg.yml > $dir/$branch/config/database.yml
diff -u $dir/$branch/config/database.pg.yml $dir/$branch/config/database.yml

echo "== Next steps =="
echo "cd $dir/$branch/"
echo "bin/setup"
